// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetPlatoon.Godfrey.Database;

namespace PetPlatoon.Godfrey.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PetPlatoon.Godfrey.Database.Configs.Config", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Key")
                        .IsRequired();

                    b.Property<ulong>("ServerId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("ServerId");

                    b.ToTable("Configs");
                });

            modelBuilder.Entity("PetPlatoon.Godfrey.Database.Quotes.Quote", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<ulong>("AuthorId");

                    b.Property<ulong>("ChannelId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsNotSafeForWork");

                    b.Property<string>("Message")
                        .IsRequired();

                    b.Property<ulong>("QuoterId");

                    b.Property<ulong>("ServerId");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("QuoterId");

                    b.HasIndex("ServerId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("PetPlatoon.Godfrey.Database.Servers.Server", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<ulong>("OwnerId");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("PetPlatoon.Godfrey.Database.Servers.ServerMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<ulong>("ServerId");

                    b.Property<ulong>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ServerId");

                    b.HasIndex("UserId");

                    b.ToTable("ServerMembers");
                });

            modelBuilder.Entity("PetPlatoon.Godfrey.Database.Users.User", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("Coins")
                        .IsConcurrencyToken();

                    b.Property<DateTime>("LastCasinoCommandIssued");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid>("Version");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PetPlatoon.Godfrey.Database.Configs.Config", b =>
                {
                    b.HasOne("PetPlatoon.Godfrey.Database.Servers.Server", "Server")
                        .WithMany("Configs")
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PetPlatoon.Godfrey.Database.Quotes.Quote", b =>
                {
                    b.HasOne("PetPlatoon.Godfrey.Database.Users.User", "Author")
                        .WithMany("AuthoredQuotes")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PetPlatoon.Godfrey.Database.Users.User", "Quoter")
                        .WithMany("QuotedMessages")
                        .HasForeignKey("QuoterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PetPlatoon.Godfrey.Database.Servers.Server", "Server")
                        .WithMany("Quotes")
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PetPlatoon.Godfrey.Database.Servers.Server", b =>
                {
                    b.HasOne("PetPlatoon.Godfrey.Database.Users.User", "Owner")
                        .WithMany("OwnedServers")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PetPlatoon.Godfrey.Database.Servers.ServerMember", b =>
                {
                    b.HasOne("PetPlatoon.Godfrey.Database.Servers.Server", "Server")
                        .WithMany("Members")
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PetPlatoon.Godfrey.Database.Users.User", "User")
                        .WithMany("Servers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
